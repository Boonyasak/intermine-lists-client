// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.Views.BreadcrumbView = (function(_super) {

    __extends(BreadcrumbView, _super);

    function BreadcrumbView() {
      this.hide = __bind(this.hide, this);

      this.render = __bind(this.render, this);
      return BreadcrumbView.__super__.constructor.apply(this, arguments);
    }

    BreadcrumbView.prototype.el = "ul#breadcrumb";

    BreadcrumbView.prototype.template = function(model) {
      return BreadcrumbView.__super__.template.call(this, model, "js/templates/_breadcrumb.html");
    };

    BreadcrumbView.prototype.initialize = function(options) {
      App.Mediator.bind("listSelected", this.render);
      return App.Mediator.bind("listDeselected", this.hide);
    };

    BreadcrumbView.prototype.render = function(listSlug) {
      return $(this.el).html(this.template(App.Models.Lists.bySlug(listSlug).toJSON())).show().attr("data-view", "BreadcrumbView");
    };

    BreadcrumbView.prototype.hide = function() {
      return $(this.el).hide();
    };

    return BreadcrumbView;

  })(Backbone.View);

}).call(this);
