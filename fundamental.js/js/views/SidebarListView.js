// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.Views.SidebarListView = (function(_super) {

    __extends(SidebarListView, _super);

    function SidebarListView() {
      return SidebarListView.__super__.constructor.apply(this, arguments);
    }

    SidebarListView.prototype.tagName = "li";

    SidebarListView.prototype.template = function(model) {
      return SidebarListView.__super__.template.call(this, model, "js/templates/_sidebar_list.html");
    };

    SidebarListView.prototype.events = {
      "click a": "toggleList"
    };

    SidebarListView.prototype.toggleList = function(e) {
      this.model.toggleSelected();
      return e.preventDefault();
    };

    SidebarListView.prototype.initialize = function() {
      this.model.bind("change", this.render, this);
      return this.model.bind("destroy", this.remove, this);
    };

    SidebarListView.prototype.render = function() {
      $(this.el).html(this.template(this.model.toJSON())).attr("data-view", "SidebarListView");
      $(this.el).find('a').attr("data-list-slug", this.model.get("slug"));
      if (this.model.get("selected")) {
        $(this.el).addClass("active");
      } else {
        $(this.el).removeClass("active");
      }
      return this;
    };

    SidebarListView.prototype.remove = function() {
      return $(this.el).remove();
    };

    SidebarListView.prototype.clear = function() {
      return this.model.destroy();
    };

    return SidebarListView;

  })(Backbone.View);

}).call(this);
